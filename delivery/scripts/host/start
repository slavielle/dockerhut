#!/bin/bash

# This script is a part of Shore
# MIT License
# Copyright (c) 2016 Sylvain LAVIELLE


. .shore/scripts/host/_common.sh

include_files


if [[ ! $RT_CONTAINER_ID_INITIALIZED ]]; then

    echo "Container hadn't been initialized : use \"shore init\" command to do so"

else
    IS_STARTED=$(docker inspect -f {{.State.Running}} $RT_CONTAINER_ID_INITIALIZED)

    if [[ $RT_CONTAINER_ID_STARTED ]] && [[ $IS_STARTED = "true" ]]; then

        echo "Container $RT_CONTAINER_ID_STARTED already started"

    else

        if [[ $RT_CONTAINER_ID_STARTED ]] && [[ $IS_STARTED = "false" ]]; then
            echo "Container $RT_CONTAINER_ID_STARTED has not been stopped properly"
        fi

        printf "starting container\n\n"

        # Set container-side start script as entrypoint
        rm .shore/scripts/container/entrypoint  2> /dev/null
        ln -s _start .shore/scripts/container/entrypoint

        if [ -d "$CONF_PROJECT_HTDOCS" ]; then 

            #Docker start
            OUT=$(docker start $RT_CONTAINER_ID_INITIALIZED 2>&1)

            if [[ $OUT =~ ^[0-9a-f]+$ ]]; then

                printf "container $OUT started\n\n"

                # Persist RT_CONTAINER_ID_STARTED variable
                echo "RT_CONTAINER_ID_STARTED=\"$OUT\"" > .shore/runtime/RT_CONTAINER_ID_STARTED.var.sh

                # Start services by running the "start" container-side script
                printf "starting services ...\n\n"
                docker exec -it $RT_CONTAINER_ID_INITIALIZED /home/$CONF_PROJECT_NAME/.shore/scripts/container/start $@
                printf "\nstarting services done\n\n"

                # Resolve http port
                HTTP_PORT="";
                if [ -n "$CONF_PROJECT_HTTP_PORT_MAP" ]; then
                    [[ "$CONF_PROJECT_HTTP_PORT_MAP" =~ ^[0-9]+(:[0-9]+)$ ]] && HTTP_PORT="${BASH_REMATCH[1]}"
                fi
                
                # Resolve web url
                if [[ $CONF_PROJECT_DOMAIN_NAME ]]; then
                    if [[ "$(uname)" == "Darwin" ]]; then
                        WEB_URL="http://$CONF_PROJECT_DOMAIN_NAME$HTTP_PORT"
                    else
                        WEB_URL="http://$CONF_PROJECT_DOMAIN_NAME"
                    fi
                else
                    if [[ "$(uname)" == "Darwin" ]]; then
                        WEB_URL="http://localhost$HTTP_PORT/$CONF_PROJECT_NAME"
                    else
                        WEB_URL="http://$CONF_CONTAINER_IP/$CONF_PROJECT_NAME"
                    fi
                fi
                if [[ $CONF_PROJECT_INDEX_FILE ]]; then
                    WEB_URL=$WEB_URL"/$CONF_PROJECT_INDEX_FILE"
                fi

                # Display web page URL and open browser
                printf "Consult the website at : $WEB_URL\n"
                if which xdg-open > /dev/null && [ "$CONF_OPEN_BROWSER_ON_START" = true ]; then
                    xdg-open "$WEB_URL" </dev/null &>/dev/null &
                fi
                if [[ $CONF_PROJECT_DOMAIN_NAME ]]; then
                    printf "Please make sure you added the following line to your /etc/hosts : \n"
                    if [[ "$(uname)" == "Darwin" ]]; then
                        printf "$CONF_CONTAINER_IP\t$CONF_PROJECT_DOMAIN_NAME\n\n"
                    else
                        printf "127.0.0.1\t$CONF_PROJECT_DOMAIN_NAME\n\n"
                    if
                fi

            else

                printf "someting went wrong:\n"
                printf "$OUT\n"

            fi
        else
            echo "web directory \"$CONF_PROJECT_HTDOCS\" doesn't exist"
        fi
    fi
fi
