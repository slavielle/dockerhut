#!/bin/bash

# This script is a part of Shore
# MIT License
# Copyright (c) 2016 Sylvain LAVIELLE

# include core settings

. .shore/scripts/host/_common.sh

include_files

# Get parameters
ORIGIN_DIR_PATH=$1
COMMAND=$2
shift 2 


# Define log file name RT variables
RT_LOG_FILES_NAME_PART_1=$(date +"%Y_%m_%d_%H_%M_%S")"-$COMMAND"
echo "RT_LOG_FILES_NAME_PART_1=\"$RT_LOG_FILES_NAME_PART_1\"" > ".shore/runtime/RT_LOG_FILES_NAME_PART_1.var.sh"
echo "RT_LOG_FILES_NAME_PART_2=\"\"" > ".shore/runtime/RT_LOG_FILES_NAME_PART_2.var.sh"


# Execute
if [ -f ".shore/scripts/host/$COMMAND" ]; then

    # Normal command handling
    if [ ${COMMAND:0:1} != "_" ]; then
        echo "run core command : .shore/scripts/host/$COMMAND"
    fi
    ".shore/scripts/host/$COMMAND" "$ORIGIN_DIR_PATH" $@
else
    
    # Attempt handling command from bundles.
    for BUNDLE_PATH in .shore/bundles/*;  do
        if [ -f "$BUNDLE_PATH/host_scripts/$COMMAND" ]; then
            echo "run bundle command : $BUNDLE_PATH/host_scripts/$COMMAND"
            "$BUNDLE_PATH/host_scripts/$COMMAND" "$ORIGIN_DIR_PATH" $@
            exit
        fi
    done 
    # Attempt handling command using profile hooks.
    if [ -f ".shore/profiles/$RT_PROFILE/on_$COMMAND.hook" ]; then

        # Direct hook handling
        echo "Triggering hooks from file .shore/profiles/$RT_PROFILE/on_$COMMAND.hook"
        ".shore/scripts/host/_play_hook" "$ORIGIN_DIR_PATH" $COMMAND $@
    
    # Attempt handling command using global hooks.
    elif [ -f ".shore/hooks/on_$COMMAND.hook" ]; then

        # Direct hook handling
        echo "Triggering hooks from file .shore/hooks/on_$COMMAND.hook"
        ".shore/scripts/host/_play_hook" "$ORIGIN_DIR_PATH" $COMMAND $@

    # Command mismatch
    else
        echo "Shore: command \"$COMMAND\" not available"
        exit 1
    fi
fi


# Remove log file name RT variables
rm .shore/runtime/RT_LOG_FILES_NAME_PART_1.var.sh
rm .shore/runtime/RT_LOG_FILES_NAME_PART_2.var.sh
